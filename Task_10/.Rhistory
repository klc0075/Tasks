feat_migration(1, 2, 1) +
feat_growth(10, time=0) +
feat_growth(5, time=1)
check_model(modelk)
modelk<- coal_model(c(10,20),9) +
feat_size_change(.3, population=2, time = "1") +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1, 2, 1) +
feat_growth(10, time=0) +
feat_growth(5, time=1) +
feat_selection(strength_A = 0.9, population = 2, time=1, locus_group = "all")
modelk<- coal_model(c(10,20),9) +
feat_size_change(.3, population=2, time = "1") +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1, 2, 1) +
feat_growth(10, time=0) +
feat_growth(5, time=1) +
feat_selection(strength_A = 0.9, population = 2, time=1, locus_group = "all") +
feat_selection(strength_A=1.1, population=1, time=0, locus_group = "all")
check_model(modelk)
modelk<- coal_model(c(10,20),9) +
feat_size_change(.3, population=2, time = "1") +
feat_mutation(par_prior("theta", sample.int(100,1))) +
feat_migration(0.5, 1, 2) +
feat_migration(1, 2, 1) +
feat_growth(10, time=0) +
feat_growth(5, time=1) +
feat_selection(strength_A = 0.9, population = 2, time=1, locus_group = "all") +
feat_selection(strength_A=1.1, population=1, time=0, locus_group = "all") +
sumstat_nucleotide_div()
check_model(modelk)
Output <- simulate (modelk,nsim=100)
Pis <- sapply(Output, function(x) x$pi)
Pis
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
pbtree
?pbtree
pbtree(n=100, b=20, d=200)
for (i in 1:100) {
20 <- births[[i]]
10 <- Fractions [i]
pbtree(n=100, b=20, d=200)
}
for (i in 1:100) {
births[i] <20
Fractions [i] <- 10
pbtree(n=100, b=20, d=200)
}
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:10) {
births <- runif(1, 0, 1)
Fractions [i] <- 10
#      pbtree(n=100, b=20, d=200)
}
births
Fractions
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:10) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- 10
#      pbtree(n=100, b=20, d=200)
}
births
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- 10
#      pbtree(n=100, b=20, d=200)
}
births
Fractions
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(3, 0, 1)
Fractions [i] <- 10
#      pbtree(n=100, b=20, d=200)
}
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- 10
#      pbtree(n=100, b=20, d=200)
}
library (phytools)
trees <- vector()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
#      pbtree(n=100, b=20, d=200)
}
Fractions
?pbtree
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
pbtree(n=1, b= births [i], d=Fractions [i])
}
trees
births <- vector()
births
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees <- pbtree(n=1, b= births [i], d=Fractions [i])
}
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:5) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees <- pbtree(n=1, b= births [i], d=Fractions [i] * births[i])
}
netdiversification <- (births [i] - Fractions[i]* births[i])
netdiversification
ntips(trees)
?ntips
Ntips(trees)
Ntip(trees)
Ntip(trees)
log(2)
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees <- pbtree(n=1, b= births [i], d=Fractions [i] * births[i])
}
log[Ntip(trees)]
treetips <- Ntip(trees)
treetips
logtreetips <- log(treetips)
logtreetips
log(2)
plot(netdiversification, logtreetips)
?ggplot2
plot(netdiversification, logtreetips)
totaltreetips <- log(sapply(trees,Ntip))
totaltreetips <- log(sapply(trees, Ntip))
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=1, b= births [i], d=Fractions [i] * births[i])
netdr[i] <- (births [i] - Fractions[i]* births[i])
}
totaltreetips <- log(sapply(trees, Ntip))
plot(netdr, totaltreetips)
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=1, b= births [i], d=Fractions [i] * births[i])
netdr[[i]] <- (births [i] - Fractions[i]* births[i])
}
totaltips <- log(sapply(trees, Ntip))
plot(netdr, totaltips)
plot(netdr, logtreetips)
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=1, b= births [i], d=Fractions [i] * births[i])
netdr[[i]] <- (births [i] - Fractions[i]* births[i])
}
totaltips <- log(sapply(trees, Ntip))
plot(netdr, totaltips)
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=100, b= births [i], d=Fractions [i] * births[i])
netdr[[i]] <- (births [i] - Fractions[i]* births[i])
}
totaltips <- log(sapply(trees, Ntip))
plot(netdr, totaltips)
library (phytools)
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
speciationrate <- vector()
Avgbranchlength <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=100, b= births [i], d=Fractions [i] * births[i])
netdr[[i]] <- (births [i] - Fractions[i]* births[i])
speciationrate[i] <- births[i]
}
ablinelm
?abline
abline()
Q4plot <-plot(netdr, totaltips)
abline(Q4plot)
?abline
line <- lm(totaltips ~ netdr)
abline(line)
library (phytools)
#Question 1-3
trees <- list()
births <- vector()
Fractions <- vector()
netdr <- vector()
speciationrate <- vector()
Avgbranchlength <- vector()
for (i in 1:100) {
births [i]<- runif(1, 0, 1)
Fractions [i] <- runif(1,0,1)
trees [[i]]<- pbtree(n=100, b= births [i], d=Fractions [i] * births[i])
netdr[[i]] <- (births [i] - Fractions[i]* births[i])
speciationrate[i] <- births[i]
Avgbranchlength[[i]] <- mean(trees[[i]]$edge.length)
}
cor(speciationrate, Avgbranchlength)
plot(speciationrate, Avgbranchlength)
trees
trees
?pbtree
max(trees)
maxtips(trees)
Ntip
?Ntip
tree[17]
trees[17]
TreeK<- trees[17]
rates <- vector()
traits <- list()
plot(TreeK)
read.tree(TreeK)
read.tree('TreeK')
plot(TreeK)
ggtree
?ggtree
plot.tree(TreeK)
plot(TreeK, y=NULL)
plot.tree(TreeK,y=NULL)
library(ggplot2)
plot.tree(TreeK,y=NULL)
install.packages('ggtree')
library(ggtree)
library('ggtree')
plot.phylo(TreeK)
plot.phylo(TreeK, y=NULL)
library(phylogram)
?phylogram
plot.tree(TreeK,y=NULL)
phylo.to.map(TreeK)
TreeK
TreeK<- trees[[17]]
plot(TreeK)
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(Treek, sig2=rates[i])
}
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(TreeK, sig2=rates[i])
}
mean(traits)
mean(traits[[i]])
rates[i]
cor(mean(traits[[i]],rates[i] ))
cor(mean(traits,rates))
#Question 8
mtrait<- mean(traits[[i]])
cor(mtrait,rates)
cor(mtrait,rates[i])
plot(mtrait, rates)
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(TreeK, sig2=rates[i])
}
mtrait<- mean(traits[[i]])
plot(mtrait, rates)
mean(traits[[i]]
mean(rates[i])
mean(rates[i])
mrate<- mean(rates[i])
plot(mtrait, mrate)
mrate<- mean(rates[[i]])
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(TreeK, sig2=rates[i])
mtrait<- mean(traits[[i]])
}
cor(mtrait,rates[i])
rates[i]
mtrait
mrate<- mean(rates[[i]])
mrate
cor(mtrait, mrate)
cor(mtrait, mrate, use=complete.obs)
cor(mtrait, mrate, use='complete.obs')
?cor
cor(mtrait, mrate, use='all.obs')
cor(mtrait, mrate, use='pairwise.complete.obs')
cor(mtrait, mrate, use='all.obs')
head(mtrait)
head(traits[[i]])
head(rates[i])
?fastBM
head(rates)
cor(traits,rates)
cor(traits[[i]],rates)
cor(traits[i],rates)
head(mean(rates))
head(traits)
mean(traits)
?mean
mean(traits, na.rm=TRUE)
?cor
cor(mtrait, mrate, use='all.obs',na.rm=TRUE)
cor(mtrait, mrate, use='complete.obs',na.rm=TRUE)
cor(mtrait, mrate, use='complete.obs',na.rm=FALSE)
head(traits[[i]])
head(traits)
head(rates)
head(rates[i])
head(traits[[i]])
rates
head(traits)
?cor
?which
?list
?which
which(traits,useNames=FALSE)
?par
?which
length(traits[[i]])
list.exclude(traits, t1:t1066)
install.packages('rlist')
library(rlist)
list.exclude(traits, t1:t1066)
list.exclude(traits[[i]], t1:t1066)
traits[[i]]
list.exclude(traits[[i]], t3:t1066)
list.exclude(traits[[i]], t(1:1066))
length(traits[[i]])
head(traits)
head(rates)
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(TreeK, sig2=rates[i])
}
length(traits)
head(traits)
?fastBM
mean(traits)
?mean
unlist(traits)
unlistedtraits <-unlist(traits)
mean(unlistedtraits)
meanul<-mean(unlistedtraits)
cor(meeanul,rates)
cor(meanul, rates)
meanul<-mean(unlistedtraits)
meanul
cor(meanul, rates)
cor(meanul, rates,use='complete.obs')
trees
?fastBM
rates
sapply(traits, mean)
mtraitsK <- sapply(traits, mean)
cor(mtraitsK, rates)
for (i in 1:100) {
rates[i] <- runif(1)
traits[[i]]<- fastBM(TreeK, sig2=rates[i])
}
mtraitsK <- sapply(traits, mean)
cor(mtraitsK, rates)
plot(mtraitsK, rates)
vtraitsk <- sapply(traits, var)
vtraitsk
cor(vtraitsk,rates)
plot(vtraitsK, rates)
plot(vtraitsk, rates)
traitMat <- cbind(traits[[1]], traits[[2]])
traitMat
sapply(traits,"[[",1)
sapply(traits,"[[",2)
traitMat <- cbind(traits[[1]], traits[[2]])
traitMat
element1<-sapply(traits,"[[",1)
element2<-sapply(traits,"[[",2)
cbind(element1,element2)
cor(element1,element2)
traits[,1]
traits[1,1]
traits[1,]
head(traits)
traits[1,1]
nrow(traits)
traits[1]
cor(element1,element2)
vtraitsratecor<- cor(vtraitsk,rates)
mtraitsratecor<-cor(mtraitsK, rates)
traitMat<- cbind(element1,element2)
plot(element1,element2)
pdf("Question 8 Mean of Traits vs Variance.pdf", height=4, width=4)
plot(as.numeric(names(meantraitsvsvar)), xlab="mtraitsK", ylab="rates")
Q8 <- plot(mtraitsK, rates)
pdf("Question 8 Mean of Traits vs Variance.pdf", height=4, width=4)
plot(as.numeric(names(Q8)), xlab="mtraitsK", ylab="rates")
pdf("Question 8 Mean of Traits vs Variance.pdf", height=4, width=4)
plot("Question 8 Mean of Traits vs Variance", xlab="mtraitsK", ylab="rates")
pdf("Question 8 Mean of Traits vs Variance.pdf", height=4, width=4)
plot(x="mtraitsK", y="rates")
pdf("Question 8 Mean of Traits vs Variance.pdf")
plot(mtraitsK,rates)
dev.off()
setwd('/Users/kaylacoffman/Desktop/Evolution/Tasks/Task_10')
pdf("Question 8 Mean of Traits vs Variance.pdf")
plot(mtraitsK,rates)
dev.off()
?phylomorphospace
?phylomorphospace
TreeK
phylomorphospace(TreeK, traitMat, A=1065)
nrows(TreeK)
Nrows(TreeK)
nrow(TreeK)
nrow(traitMat)
phylomorphospace(TreeK, traitMat, xlab="element1", ylab="element2")
phylomorphospace(TreeK, traits[,1:2])
phylomorphospace(TreeK, traits[,1:,2])
X<- cbind(fastBM(element1),fastBM(element2))
X<- cbind(fastBM(traits),fastBM(traits))
pdf("Largest Tree.pdf")
plot(TreeK)
dev.off
pdf("Question 5 speciation rate and average branch length")
plot(speciationrate, Avgbranchlength)
dev.off()
pdf("Question 4 net diversification vs log of total number of tips.pdf")
plot(netdr, totaltips)
line <- lm(totaltips ~ netdr)
abline(line)
dev.off()
pdf("Question 9 Variance of traits and rates.pdf")
plot(vtraitsk, rates)
dev.off()
pdf("First element vs Second element of Traits.pdf")
plot(element1,element2)
dev.off()
SRbranchlength <-cor(speciationrate, Avgbranchlength)
plot(TreeK)
pdf("Question 7 Largest Tree.pdf")
plot(TreeK)
dev.off
pdf("Question 7 Largest Tree.pdf")
plot(TreeK)
dev.off()
pdf("Q10 First element vs Second element of Traits.pdf")
plot(element1,element2)
dev.off()
TreeK2 <- pbtree(n=100)
X <- fastBM(TreeK2, nsim=2)
phylomorphospace(TreeK2, X, xlab="element1", "element2")
phylomorphospace(TreeK2, X, xlab="element1", ylab="element2")
pdf("extra credit.pdf")
phylomorphospace(TreeK2, X, xlab="element1", ylab="element2")
dev.off()
